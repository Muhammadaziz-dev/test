# Generated by Django 5.2.5 on 2025-08-28 09:48

import django.core.validators
import django.db.models.deletion
import product.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0001_initial'),
        ('loan', '0001_initial'),
        ('refund', '0001_initial'),
        ('store', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExportTaskLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=255, unique=True)),
                ('store_id', models.IntegerField()),
                ('status', models.CharField(choices=[('PENDING', 'Kutilmoqda'), ('PROCESSING', 'Jarayonda'), ('SUCCESS', 'Tayyor'), ('FAILED', 'Xato')], default='PENDING', max_length=20)),
                ('file_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('progress', models.PositiveIntegerField(default=0)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('enter_price', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=20, validators=[product.models.validate_finite])),
                ('sku', models.CharField(blank=True, max_length=100, null=True, unique=True, validators=[product.models.validate_sku])),
                ('barcode', models.CharField(blank=True, max_length=13, null=True, unique=True, validators=[product.models.validate_barcode])),
                ('count_type', models.CharField(choices=[('PCS', 'Pieces'), ('KG', 'Kilogram'), ('L', 'Liter'), ('M', 'Meter'), ('BOX', 'Box'), ('SET', 'Set'), ('PKG', 'Package'), ('D', 'Dozen')], default='PCS', max_length=10)),
                ('date_added', models.DateField(auto_now_add=True)),
                ('count', models.IntegerField(default=0, validators=[product.models.validate_positive])),
                ('warehouse_count', models.IntegerField(default=0, validators=[product.models.validate_positive])),
                ('out_price', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=20, validators=[product.models.validate_finite, product.models.validate_positive])),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('UZS', 'UZS')], default='USD', max_length=10)),
                ('exchange_rate', models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.000000'))])),
                ('in_stock', models.BooleanField(default=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='category.category')),
                ('store', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='store.store')),
            ],
            options={
                'verbose_name': 'Mahsulot',
                'verbose_name_plural': 'Mahsulotlar',
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='product/images/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png']), product.models.validate_image_size])),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='product/thumbnails/')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='product.product')),
            ],
        ),
        migrations.CreateModel(
            name='Properties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='properties', to='product.product')),
            ],
            options={
                'verbose_name_plural': 'Properties',
            },
        ),
        migrations.CreateModel(
            name='StockEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, "Kamida 1 dona ko'rsatilishi kerak")])),
                ('unit_price', models.DecimalField(decimal_places=6, max_digits=20, validators=[product.models.validate_finite, django.core.validators.MinValueValidator(Decimal('0.000001'))])),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('UZS', 'UZS')], default='USD', max_length=3)),
                ('exchange_rate', models.DecimalField(decimal_places=6, default=Decimal('1.0'), max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.000001'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_warehouse', models.BooleanField(default=False)),
                ('debt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_entries', to='loan.debtdocument')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_entries', to='product.product')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WasteEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1, "Kamida 1 dona ko'rsatilishi kerak")])),
                ('reason', models.CharField(default='Yaroqsiz holat', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waste_entries', to='product.product')),
                ('refund', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='waste_entries', to='refund.refund')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name', 'sku', 'barcode'], name='product_pro_name_67db5c_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['store', 'is_deleted'], name='product_pro_store_i_f2dd93_idx'),
        ),
        migrations.AddIndex(
            model_name='properties',
            index=models.Index(fields=['product', 'feature'], name='product_pro_product_101736_idx'),
        ),
        migrations.AddIndex(
            model_name='stockentry',
            index=models.Index(fields=['product'], name='product_sto_product_fded72_idx'),
        ),
        migrations.AddIndex(
            model_name='stockentry',
            index=models.Index(fields=['-created_at'], name='product_sto_created_242bc3_idx'),
        ),
    ]
